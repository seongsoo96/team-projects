<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="ppeonfun.dao.admin.user.UserDao">

	<select id="selectCntAll" resultType="int">
		select count(*) from member
	</select>
	
	<select id="selectPageList" resultType="hashmap" parameterType="ppeonfun.util.Paging">
		select * from (
		    select rownum rnum, B.* from (
		        select 
		            m_no, m_name, m_id, m_nick, m_birth, m_email, m_caution
		        from member
		        order by m_no desc
		    ) B
		) R
		where rnum between #{startNo} and #{endNo}
	</select>
	
	<select id="selectCntAllBySearch" resultType="int" parameterType="hashmap">
		select count(*) from member
		where ${category} like '%' || #{search} || '%'
	</select>
	
	<select id="selectSearchPageList" resultType="hashmap" parameterType="hashmap">
		select * from (
		    select rownum rnum, B.* from (
		        select 
		             m_no, m_name, m_id, m_nick, m_birth, m_email, m_caution
		        from member
		        where ${category} like '%' || #{search} || '%'
		        order by m_no desc
		    ) B
		) R
		where rnum between #{paging.startNo} and #{paging.endNo}
	</select>	
	
	<select id="selectByMno" resultType="hashmap" parameterType="int">
		SELECT my.my_stored_name, m.* 
		FROM member m 
		LEFT JOIN mypage my
		ON m.m_no = my.my_no
		where m.m_no = #{m_no}
	</select>
	
	<insert id="insertMember" parameterType="Member">
		insert into member(m_no, m_id, m_password, m_name, m_phone, m_email, m_nick, m_gender, m_birth, m_signup_date, m_bank, m_account,
						   m_caution, m_grade, m_post, m_address, m_detail_address, m_delete_state, m_social) 
		values(member_SEQ.nextval, #{mId}, #{mPassword}, #{mName}, #{mPhone}, #{mEmail}, #{mNick}, #{mGender}, #{mBirth}, sysdate, #{mBank}, #{mAccount}, #{mCaution}, #{mGrade}, #{mPost}, #{mAddress}, #{mDetailAddress}, #{mDeleteState}, #{mSocial})
  	</insert>
  	
  	<update id="updateNick" parameterType="Member">
  		update member
  		set m_nick = #{mNick}
  		where m_no = #{mNo}
  	</update>
  	
	<delete id="deleteMember" parameterType="Member">
		delete from member
		where m_no = #{mNo}
	</delete>
	
</mapper>